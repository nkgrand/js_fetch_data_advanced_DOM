{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","showDetails","divClass","title","result","document","body","insertAdjacentHTML","map","phone","name","join","request","id","fetch","then","response","ok","json","Error","getDetails","getFirstReceivedDetails","arr","Promise","race","getThreeFastestDetails","ids","all","getAllSuccessfulDetails"],"mappings":";AAAA,aAEA,IAAMA,EAAW,mEAGXC,EAAc,SAACC,EAAUC,EAAOC,GACpCC,SAASC,KAAKC,mBAAmB,aACjBL,qBAAAA,OAAAA,EACYC,oCAAAA,OAAAA,EAEpBC,+BAAAA,OAAAA,EAAOI,IAAI,SAAAC,GACLA,MAAAA,mBAAAA,OAAAA,EAAMC,KADI,qBAEfC,KAAK,IANd,mCAYIC,EAAU,WAACC,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACbC,OAAAA,MAASd,GAAAA,OAAAA,GAAWa,OAAAA,EAApB,UACJE,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHP,IAAIC,MAAM,YAOnBC,EAAa,WACVR,OAAAA,IACJG,KAAK,SAAAX,GAAUA,OAAAA,EAAOI,IAAI,SAAAC,GAASA,OAAAA,EAAMI,QAGxCQ,EAA0B,SAACC,GACxBC,OAAAA,QAAQC,KAAKF,EAAId,IAAI,SAAAK,GAAMD,OAAAA,EAAYC,IAAAA,OAAAA,QAG1CY,EAAyB,SAACC,GACvBH,OAAAA,QAAQI,IACb,CACEJ,QAAQC,KAAKE,EAAIlB,IAAI,SAAAK,GAAMD,OAAAA,EAAYC,IAAAA,OAAAA,OACvCU,QAAQC,KAAKE,EAAIlB,IAAI,SAAAK,GAAMD,OAAAA,EAAYC,IAAAA,OAAAA,OACvCU,QAAQC,KAAKE,EAAIlB,IAAI,SAAAK,GAAMD,OAAAA,EAAYC,IAAAA,OAAAA,UAKvCe,EAA0B,SAACN,GACxBC,OAAAA,QAAQI,IAAIL,EAAId,IAAI,SAAAK,GAAMD,OAAAA,EAAYC,IAAAA,OAAAA,QAG/CO,IACGL,KAAK,SAAAX,GAAUiB,OAAAA,EAAwBjB,KACvCW,KAAK,SAAAX,GAAU,MAAA,CAACA,KAChBW,KAAK,SAAAX,GAAUH,OAAAA,EAAY,iBAAkB,iBAAkBG,KAElEgB,IACGL,KAAK,SAAAX,GAAUqB,OAAAA,EAAuBrB,KACtCW,KAAK,SAAAX,GAAUH,OAAAA,EAAY,iBAAkB,gBAAiBG,KAEjEgB,IACGL,KAAK,SAAAX,GAAUwB,OAAAA,EAAwBxB,KACvCW,KAAK,SAAAX,GAAUH,OAAAA,EAAY,iBAAkB,iBAAkBG","file":"main.c6f7328f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/'\n                  + 'phone-catalogue-static/api/phones';\n\nconst showDetails = (divClass, title, result) => {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <div class=\"${divClass}\">\n      <h3 class=\"li-header\">${title}</h3>\n      <ul>\n        ${result.map(phone => `\n          <li>${phone.name}</li>\n        `).join('')}\n      </ul>\n    </div>\n  `);\n};\n\nconst request = (id = '') => {\n  return fetch(`${BASE_URL}${id}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return new Error('Error');\n      }\n\n      return response.json();\n    });\n};\n\nconst getDetails = () => {\n  return request()\n    .then(result => result.map(phone => phone.id));\n};\n\nconst getFirstReceivedDetails = (arr) => {\n  return Promise.race(arr.map(id => request(`/${id}`)));\n};\n\nconst getThreeFastestDetails = (ids) => {\n  return Promise.all(\n    [\n      Promise.race(ids.map(id => request(`/${id}`))),\n      Promise.race(ids.map(id => request(`/${id}`))),\n      Promise.race(ids.map(id => request(`/${id}`))),\n    ]\n  );\n};\n\nconst getAllSuccessfulDetails = (arr) => {\n  return Promise.all(arr.map(id => request(`/${id}`)));\n};\n\ngetDetails()\n  .then(result => getFirstReceivedDetails(result))\n  .then(result => [result])\n  .then(result => showDetails('first-received', 'First received', result));\n\ngetDetails()\n  .then(result => getThreeFastestDetails(result))\n  .then(result => showDetails('three-received', 'Three fastest', result));\n\ngetDetails()\n  .then(result => getAllSuccessfulDetails(result))\n  .then(result => showDetails('all-successful', 'All Successful', result));\n"]}